{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,mBAChCC,EAAOF,SAASC,cAAc,SAE9BE,EAAeH,SAASC,cAAc,kBACtCG,EAAcJ,SAASC,cAAc,iBACrCI,EAASL,SAASC,cAAc,mBAEtCC,EAAKI,iBAAiB,UAEtB,SAA8BC,G,kBAyC9B,IAAuBC,EAAUC,GAAVD,EA7BLE,EA6BeD,EA7BZE,EA8BZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,YAEpBA,OArCAS,MAAK,SAAAC,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MACjBW,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAiCC,OAARb,EAAE,QAAYa,OAANd,EAAM,UAEhEe,OAAM,SAAAL,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MAClBW,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAgCF,OAARb,EAAE,QAAYa,OAANd,EAAM,UAElEE,GAASe,GAlBXnB,EAAEoB,iBACF5B,EAAO6B,UAAW,EAElB,IAAIjB,GAASR,EAAa0B,cACpBH,GAAgBtB,EAAYyB,cAC5BC,GAAazB,EAAOwB,cAE1Bd,YAAW,WACThB,EAAO6B,UAAW,IACjBE,EAAYJ,EAAef,GAC9B,IAAK,IAAIoB,EAAI,EAAGA,GAAKD,EAAWC,IAAGC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst btnRef = document.querySelector('[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nconst firstDelayMs = document.querySelector('[name=\"delay\"]');\nconst delayStepMs = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', submitCreatePromises);\n\nfunction submitCreatePromises(e) {\n  e.preventDefault();\n  btnRef.disabled = true;\n\n  let delay = +firstDelayMs.valueAsNumber;\n  const delayStepVal = +delayStepMs.valueAsNumber;\n  const amountVal = +amount.valueAsNumber;\n\n  setTimeout(() => {\n    btnRef.disabled = false;\n  }, amountVal * delayStepVal + delay)\n  for (let i = 1; i <= amountVal; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += delayStepVal;\n  }\n}\n\n// const promise = new Promise((resole, reject) => {\n//   const canFulfill = Math.randomm() > 0.5;\n//   setTimeout(() =>{\n//     if (canFulfill) {\n//       resole('промис выполн успешно(fulfilled)')\n//     }\n//     reject('error');\n//   }, 2000)\n// });\n\n// promise.then(onFulfilled, onRejected);\n// console.\n// promise.then(result => {\n//   console.log(result)\n// },\n// error => {\n//   console.log(error)\n// })\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$btnRef","document","querySelector","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$firstDelayMs","$ce04d3a99e08e73b$var$delayStepMs","$ce04d3a99e08e73b$var$amount","addEventListener","e","position","delay","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","delayStepVal","preventDefault","disabled","valueAsNumber","amountVal","i1","_loop"],"version":3,"file":"03-promises.948bd16e.js.map"}